--20180801 Recreate tables 

--DROP OLD TABLESPACE

--SELLER ENTITY

CREATE TABLE SELLER (
  SELLER_ID NUMBER (10)  NOT NULL PRIMARY KEY,
  SELLER_FIRST_NAME VARCHAR(100),
  SELLER_LAST_NAME VARCHAR(100),
  SELLER_ADDRESS1 VARCHAR (120),
  SELLER_ADDRESS2 VARCHAR (120),
  SELLER_CITY VARCHAR (50),
  SELLER_STATE VARCHAR (50),
  SELLER_ZIPCODE NUMBER (10),
  SELLER_PHONE NUMBER (10)
);

COMMIT;


--CATEGORY ENTITY

CREATE TABLE CATEGORY (
  CATEGORY_ID NUMBER (10)  NOT NULL PRIMARY KEY,
  CATEGORY_NAME VARCHAR(50)
  );
  
COMMIT;

--LISTING ENTITY

CREATE TABLE LISTING (
  LISTING_ID NUMBER (10)  NOT NULL PRIMARY KEY,
  SELLER_ID NUMBER (10) NOT NULL
 );
 
 COMMIT;

--INVENTORY ENTITY

CREATE TABLE INVENTORY (
  INVENTORY_ID NUMBER (10)  NOT NULL PRIMARY KEY,
  BALANCE_ON_HAND NUMBER (10),
 );

COMMIT;

--PRODUCT ENTITY

CREATE TABLE PRODUCT (
  PRODUCT_ID NUMBER (10)  NOT NULL PRIMARY KEY,
  CATEGORY_ID NUMBER (10), 
  INVENTORY_ID NUMBER (10), 
  LISTING_ID NUMBER (10), 
  SELLER_ID NUMBER (10),
  SHIPMENT_ID NUMBER (10),
  PRODUCT_NAME VARCHAR(50),
  PRODUCT_DESCRIPTION VARCHAR(400),
  PRODUCT_PRICE DECIMAL (8,2)
);

ALTER TABLE PRODUCT 
ADD(
  CATEGORY_ID NUMBER (10), 
  INVENTORY_ID NUMBER (10), 
  LISTING_ID NUMBER (10), 
  SELLER_ID NUMBER (10),
  SHIPMENT_ID NUMBER (10)
);



ALTER TABLE PRODUCT
ADD CONSTRAINT fk_SellerProduct
FOREIGN KEY (seller_id)
REFERENCES SELLER (seller_id);

ALTER TABLE PRODUCT
ADD CONSTRAINT fk_ListingProduct
FOREIGN KEY (listing_id)
REFERENCES LISTING (listing_id);

ALTER TABLE PRODUCT
ADD CONSTRAINT fk_category_id
FOREIGN KEY (category_id)
REFERENCES CATEGORY (category_id);

ALTER TABLE PRODUCT
ADD CONSTRAINT fk_InventoryProduct
FOREIGN KEY (inventory_id)
REFERENCES INVENTORY (inventory_id);

ALTER TABLE PRODUCT
ADD CONSTRAINT FK_PRODUCT_SHIPMENT
FOREIGN KEY (SHIPMENT_ID)
REFERENCES SHIPMENT (SHIPMENT_ID);


--SHIPPING SPEED ENTITY

CREATE TABLE SHIPPING_SPEED (
	SHIPPING_SPEED_ID NUMBER(10) NOT NULL PRIMARY KEY,
	SPEED_NAME VARCHAR (50),
	SHIPPING_SPEED_DESCRIPTION VARCHAR (100),
	SPEED_COST NUMBER (6,2)
);

--CUSTOMER ENTITY

CREATE TABLE CUSTOMER (
  CUSTOMER_ID NUMBER (10)  NOT NULL PRIMARY KEY,
  CUSTOMER_FIRST_NAME VARCHAR(100),
  CUSTOMER_LAST_NAME VARCHAR(100),
  CUSTOMER_ADDRESS1 VARCHAR (120),
  CUSTOMER_ADDRESS2 VARCHAR (120),
  CUSTOMER_CITY VARCHAR (50),
  CUSTOMER_STATE VARCHAR (50),
  CUSTOMER_ZIPCODE NUMBER (10),
  CUSTOMER_PHONE NUMBER (10)
);

COMMIT;
 
 --ACCOUNT ENTITY
 
CREATE TABLE ACCOUNT (
	ACCOUNT_ID NUMBER(10) NOT NULL PRIMARY KEY,
	CUSTOMER_ID NUMBER(10)
);

ALTER TABLE ACCOUNT
ADD CONSTRAINT FK_ACCOUNTCUSTOMER
FOREIGN KEY (CUSTOMER_ID)
REFERENCES CUSTOMER (CUSTOMER_ID);

 COMMIT;
 

--ORDER ENTITY

CREATE TABLE CUSTOMER_ORDER (
	ORDER_ID NUMBER (10) NOT NULL PRIMARY KEY,
	ACCOUNT_ID NUMBER(10),
	SHIPPING_SPEED_ID NUMBER (10),
	ORDER_TOTAL DECIMAL (6,2),
	ORDER_DATE DATE
);

ALTER TABLE CUSTOMER_ORDER
ADD CONSTRAINT FK_CUSTOMER_ORDER_ACCOUNT
FOREIGN KEY (ACCOUNT_ID)
REFERENCES ACCOUNT (ACCOUNT_ID);

ALTER TABLE CUSTOMER_ORDER
ADD CONSTRAINT FK_CUSTOMER_ORDER_SHIP_SPEED
FOREIGN KEY (SHIPPING_SPEED_ID)
REFERENCES SHIPPING_SPEED (SHIPPING_SPEED_ID);

COMMIT;


--ORDER_LINE_ITEM ENTITY

CREATE TABLE ORDER_LINE_ITEM (
	ORDER_LINE_ITEM_ID NUMBER (10) NOT NULL PRIMARY KEY,
	PRODUCT_ID NUMBER(10),
	ORDER_ID NUMBER(10),
	LINE_PRICE DECIMAL (6,2),
	PRODUCT_QUANTITY NUMBER (10)
);

ALTER TABLE ORDER_LINE_ITEM
ADD CONSTRAINT FK_ORDER_LINE_ITEM_PRODUCT
FOREIGN KEY (PRODUCT_ID)
REFERENCES PRODUCT (PRODUCT_ID);

ALTER TABLE ORDER_LINE_ITEM
ADD CONSTRAINT FK_ORDER_LINE_ITEM_CUS_ORDER
FOREIGN KEY (ORDER_ID)
REFERENCES CUSTOMER_ORDER (ORDER_ID);

COMMIT;


-- SHIPMENT ENTITY

CREATE TABLE SHIPMENT (
	SHIPMENT_ID NUMBER (10) NOT NULL PRIMARY KEY,
	SHIPMENT_DATE DATE
);


--WAREHOUSE ENTITY

CREATE TABLE WAREHOUSE (
	WAREHOUSE_ID NUMBER(10) NOT NULL PRIMARY KEY,
	SHIPMENT_ID NUMBER (10),
	INVENTORY_ID NUMBER(10),
	WAREHOUSE_ARRIVAL_DATE DATE,
	WAREHOUSE_DEPARTURE_DATE DATE
);

ALTER TABLE WAREHOUSE
ADD CONSTRAINT FK_WAREHOUSE_SHIPMENT
FOREIGN KEY (SHIPMENT_ID)
REFERENCES SHIPMENT (SHIPMENT_ID);

ALTER TABLE WAREHOUSE
ADD CONSTRAINT FK_WAREHOUSE_INVENTORY
FOREIGN KEY (INVENTORY_ID)
REFERENCES INVENTORY(INVENTORY_ID);


